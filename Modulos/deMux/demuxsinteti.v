/* Generated by Yosys 0.7+281 (git sha1 d38a64b, gcc 4.9.2-10 -fPIC -Os) */

module deMux(data, enb, S, outmux);
  reg [3:0] _000_;
  reg [7:0] _001_;
  reg [3:0] _002_;
  reg [7:0] _003_;
  reg [3:0] _004_;
  reg [7:0] _005_;
  reg [3:0] _006_;
  reg [7:0] _007_;
  reg [3:0] _008_;
  reg [7:0] _009_;
  reg [3:0] _010_;
  reg [7:0] _011_;
  reg [3:0] _012_;
  reg [7:0] _013_;
  reg [3:0] _014_;
  reg [7:0] _015_;
  reg [3:0] _016_;
  reg [7:0] _017_;
  reg [3:0] _018_;
  reg [7:0] _019_;
  reg [3:0] _020_;
  reg [7:0] _021_;
  wire [3:0] _022_;
  wire [1:0] _023_;
  wire _024_;
  wire [3:0] _025_;
  wire [1:0] _026_;
  wire _027_;
  wire [3:0] _028_;
  wire [1:0] _029_;
  wire _030_;
  wire [3:0] _031_;
  wire [1:0] _032_;
  wire _033_;
  wire [3:0] _034_;
  wire [1:0] _035_;
  wire _036_;
  wire [3:0] _037_;
  wire [1:0] _038_;
  wire _039_;
  wire [3:0] _040_;
  wire [1:0] _041_;
  wire _042_;
  wire [3:0] _043_;
  wire [1:0] _044_;
  wire _045_;
  wire [3:0] _046_;
  wire [1:0] _047_;
  wire _048_;
  wire [7:0] _049_;
  wire [7:0] _050_;
  wire [7:0] _051_;
  wire [7:0] _052_;
  wire [7:0] _053_;
  wire [7:0] _054_;
  wire [7:0] _055_;
  wire [7:0] _056_;
  wire [7:0] _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  output [3:0] S;
  input [7:0] data;
  input enb;
  output [7:0] outmux;
  wire salidaX;
  assign _066_ = _047_[0] | _047_[1];
  assign _022_[1] = _049_[2] | _049_[3];
  assign _022_[2] = _049_[4] | _049_[5];
  assign _023_[0] = _022_[0] | _022_[1];
  assign _023_[1] = _022_[2] | _022_[3];
  assign _058_ = _023_[0] | _023_[1];
  assign _025_[0] = _050_[0] | _050_[1];
  assign _025_[1] = _050_[2] | _050_[3];
  assign _025_[2] = _050_[4] | _050_[5];
  assign _025_[3] = _050_[6] | _050_[7];
  assign _026_[0] = _025_[0] | _025_[1];
  assign _059_ = _026_[0] | _026_[1];
  assign _028_[0] = _051_[0] | _051_[1];
  assign _028_[3] = _051_[6] | _051_[7];
  assign _029_[1] = _028_[2] | _028_[3];
  assign _060_ = _029_[0] | _029_[1];
  assign _031_[0] = _052_[0] | _052_[1];
  assign _032_[0] = _031_[0] | _031_[1];
  assign _061_ = _032_[0] | _032_[1];
  assign _034_[0] = _053_[0] | _053_[1];
  assign _035_[0] = _034_[0] | _034_[1];
  assign _035_[1] = _034_[2] | _034_[3];
  assign _062_ = _035_[0] | _035_[1];
  assign _037_[3] = _054_[6] | _054_[7];
  assign _038_[1] = _037_[2] | _037_[3];
  assign _063_ = _038_[0] | _038_[1];
  assign _041_[1] = _040_[2] | _040_[3];
  assign _064_ = _041_[0] | _041_[1];
  assign _043_[3] = _056_[6] | _056_[7];
  assign _044_[1] = _043_[2] | _043_[3];
  assign _065_ = _044_[0] | _044_[1];
  assign _046_[1] = _057_[2] | _057_[3];
  assign _047_[0] = _046_[0] | _046_[1];
  assign _068_ = ~_066_;
  assign _069_ = ~_058_;
  assign _070_ = ~_059_;
  assign _071_ = ~_060_;
  assign _072_ = ~_061_;
  assign _073_ = ~_062_;
  assign _074_ = ~_063_;
  assign _075_ = ~_064_;
  assign _067_ = ~_065_;
  assign _052_[0] = data[0] ^ 1'h1;
  assign _053_[1] = data[1] ^ 1'h1;
  assign _053_[6] = data[6] ^ 1'h1;
  assign _053_[7] = data[7] ^ 1'h1;
  assign _054_[2] = data[2] ^ 1'h1;
  assign _054_[3] = data[3] ^ 1'h1;
  assign _054_[4] = data[4] ^ 1'h1;
  assign _054_[5] = data[5] ^ 1'h1;
  always @* begin
    _000_ = _004_;
    _001_ = _005_;
    casez (enb)
      1'h1:
        begin
          _004_ = _006_;
          _005_ = _007_;
          casez (_067_)
            1'h1:
              begin
                _006_ = 4'h1;
                _007_ = { 7'h00, salidaX };
              end
            default:
              begin
                _006_ = _008_;
                _007_ = _009_;
                casez (_068_)
                  1'h1:
                    begin
                      _008_ = 4'h2;
                      _009_ = { 7'h00, salidaX };
                    end
                  default:
                    begin
                      _008_ = _010_;
                      _009_ = _011_;
                      casez (_069_)
                        1'h1:
                          begin
                            _010_ = 4'h3;
                            _011_ = { 7'h00, salidaX };
                          end
                        default:
                          begin
                            _010_ = _012_;
                            _011_ = _013_;
                            casez (_070_)
                              1'h1:
                                begin
                                  _012_ = 4'h4;
                                  _013_ = { 7'h00, salidaX };
                                end
                              default:
                                begin
                                  _012_ = _014_;
                                  _013_ = _015_;
                                  casez (_071_)
                                    1'h1:
                                      begin
                                        _014_ = 4'h5;
                                        _015_ = { 7'h00, salidaX };
                                      end
                                    default:
                                      begin
                                        _014_ = _016_;
                                        _015_ = _017_;
                                        casez (_072_)
                                          1'h1:
                                            begin
                                              _016_ = 4'h6;
                                              _017_ = { 7'h00, salidaX };
                                            end
                                          default:
                                            begin
                                              _016_ = _018_;
                                              _017_ = _019_;
                                              casez (_073_)
                                                1'h1:
                                                  begin
                                                    _018_ = 4'h7;
                                                    _019_ = { 7'h00, salidaX };
                                                  end
                                                default:
                                                  begin
                                                    _018_ = _020_;
                                                    _019_ = _021_;
                                                    casez (_074_)
                                                      1'h1:
                                                        begin
                                                          _020_ = 4'h8;
                                                          _021_ = { 7'h00, salidaX };
                                                        end
                                                      default:
                                                        begin
                                                          _020_ = _002_;
                                                          _021_ = _003_;
                                                          casez (_075_)
                                                            1'h1:
                                                              begin
                                                                _002_ = 4'h9;
                                                                _003_ = { 7'h00, salidaX };
                                                              end
                                                            default:
                                                              begin
                                                                _002_ = 4'h0;
                                                                _003_ = data;
                                                              end
                                                          endcase
                                                        end
                                                    endcase
                                                  end
                                              endcase
                                            end
                                        endcase
                                      end
                                  endcase
                                end
                            endcase
                          end
                      endcase
                    end
                endcase
              end
          endcase
        end
      default:
        begin
          _004_ = S;
          _005_ = outmux;
        end
    endcase
  end
  assign S = _000_;
  assign outmux = _001_;
  assign _056_[0] = data[0];
  assign _056_[1] = data[1];
  assign _056_[6] = data[6];
  assign _057_[3] = data[3];
  assign _049_[0] = data[0];
  assign _049_[1] = data[1];
  assign _049_[5] = data[5];
  assign _049_[6] = data[6];
  assign _049_[7] = data[7];
  assign _050_[2] = data[2];
  assign _051_[0] = data[0];
  assign _051_[1] = data[1];
  assign _051_[5] = data[5];
  assign _051_[7] = data[7];
  assign _052_[1] = data[1];
  assign _053_[0] = data[0];
  assign _054_[0] = data[0];
  assign _054_[1] = data[1];
  assign _054_[6] = data[6];
  assign _054_[7] = data[7];
  assign _055_[0] = data[0];
  assign _055_[1] = data[1];
  assign _055_[7] = data[7];
  assign _053_[5] = _054_[5];
  assign _053_[4] = _054_[4];
  assign _053_[3] = _054_[3];
  assign _053_[2] = _054_[2];
  assign _052_[6] = _053_[6];
  assign _052_[5] = _054_[5];
  assign _052_[4] = _054_[4];
  assign _052_[3] = _054_[3];
  assign _052_[2] = _054_[2];
  assign _052_[7] = _053_[7];
  assign _051_[6] = _053_[6];
  assign _051_[4] = _054_[4];
  assign _051_[3] = _054_[3];
  assign _051_[2] = _054_[2];
  assign _055_[2] = _054_[2];
  assign _055_[3] = _054_[3];
  assign _037_[0] = _028_[0];
  assign _050_[6] = _053_[6];
  assign _050_[5] = _054_[5];
  assign _050_[4] = _054_[4];
  assign _050_[3] = _054_[3];
  assign _055_[4] = _054_[4];
  assign _050_[1] = _053_[1];
  assign _050_[0] = _052_[0];
  assign _050_[7] = _053_[7];
  assign _022_[3] = _037_[3];
  assign _022_[0] = _028_[0];
  assign _055_[6] = _053_[6];
  assign _049_[4] = _054_[4];
  assign _049_[3] = _054_[3];
  assign _049_[2] = _054_[2];
  assign _040_[0] = _028_[0];
  assign _040_[1] = _037_[1];
  assign _055_[5] = _054_[5];
  assign _057_[6] = _053_[6];
  assign _057_[5] = _054_[5];
  assign _057_[4] = _054_[4];
  assign _040_[2] = _037_[2];
  assign _057_[2] = _054_[2];
  assign _057_[1] = _053_[1];
  assign _057_[0] = _052_[0];
  assign _057_[7] = _053_[7];
  assign _043_[0] = _028_[0];
  assign _056_[5] = _054_[5];
  assign _056_[4] = _054_[4];
  assign _056_[3] = _054_[3];
  assign _056_[2] = _054_[2];
  assign _056_[7] = _053_[7];
  assign _031_[3] = _025_[3];
  assign _031_[2] = _025_[2];
  assign _031_[1] = _022_[1];
  assign _037_[1] = _022_[1];
  assign _046_[3] = _025_[3];
  assign _046_[2] = _025_[2];
  assign _046_[0] = _025_[0];
  assign _037_[2] = _025_[2];
  assign _034_[3] = _025_[3];
  assign _028_[2] = _022_[2];
  assign _028_[1] = _022_[1];
  assign _043_[2] = _025_[2];
  assign _043_[1] = _022_[1];
  assign _040_[3] = _028_[3];
  assign _034_[2] = _025_[2];
  assign _034_[1] = _022_[1];
  assign _041_[0] = _023_[0];
  assign _038_[0] = _023_[0];
  assign _047_[1] = _035_[1];
  assign _026_[1] = _035_[1];
  assign _029_[0] = _023_[0];
  assign _044_[0] = _023_[0];
  assign _032_[1] = _035_[1];
endmodule
