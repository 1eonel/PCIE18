$date
	Fri Jun  1 12:14:39 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TBStriping $end
$var wire 8 ! TL3 [7:0] $end
$var wire 8 " TL2 [7:0] $end
$var wire 8 # TL1 [7:0] $end
$var wire 8 $ TL0 [7:0] $end
$var reg 1 % clk $end
$var reg 8 & fromMux [7:0] $end
$scope module byteStp $end
$var wire 1 % clk $end
$var wire 8 ' fromMux [7:0] $end
$var reg 1 ( D $end
$var reg 8 ) TL0 [7:0] $end
$var reg 8 * TL1 [7:0] $end
$var reg 8 + TL2 [7:0] $end
$var reg 8 , TL3 [7:0] $end
$var reg 2 - c [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
bx +
bx *
bx )
x(
bx '
bx &
0%
bx $
bx #
bx "
bx !
$end
#1000
1%
#2000
0%
#3000
1%
#4000
0%
b11100 &
b11100 '
#5000
b11100 !
b11100 ,
b11100 "
b11100 +
b11100 #
b11100 *
b11100 $
b11100 )
b0 -
1%
#6000
0%
#7000
1%
#8000
0%
#9000
1%
#10000
0%
b1111100 &
b1111100 '
#11000
b1111100 !
b1111100 ,
b1111100 "
b1111100 +
b1111100 #
b1111100 *
b1111100 $
b1111100 )
1%
#12000
0%
#13000
1%
#14000
0%
#15000
1%
#16000
0%
b11111011 &
b11111011 '
#17000
b1 -
b11111011 $
b11111011 )
1(
1%
#18000
0%
b1 &
b1 '
#19000
b10 -
b1 #
b1 *
1%
#20000
0%
b10 &
b10 '
#21000
b11 -
b10 "
b10 +
1%
#22000
0%
b11 &
b11 '
#23000
b0 -
b11 !
b11 ,
1%
#24000
0%
b100 &
b100 '
#25000
b1 -
b100 $
b100 )
1%
#26000
0%
b101 &
b101 '
#27000
b10 -
b101 #
b101 *
1%
#28000
0%
b110 &
b110 '
#29000
b11 -
b110 "
b110 +
1%
#30000
0%
b11111101 &
b11111101 '
#31000
b0 -
0(
b11111101 !
b11111101 ,
1%
#32000
0%
